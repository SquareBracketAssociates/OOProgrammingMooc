{
	"title":"Objectives of the lecture",
	"subtitles":""
}

${slide:title=Who Am I}$

- Expert in OOP and OOD
- Wrote several books
- One for this lecture and for you
- Love coding and nice design
- Want to empower you
-- OO Programming
-- OO Design
-- Talking, communicating with other developers
-- Learn how to find your bugs. 

${slide:title=Process}$

- You do not have to stress if you do not get it the first time!
- Repetition, repetition and repetition

But you should 
- Do the exercises
- Watch the videos
- Read the book (if you want)
- Help yourself on Pharo discord channel
-- Learn to ask
-- Be friendly

${slide:title=Reflexion on learning}$

- Making mistakes is learning
- Repeating the same mistakes is idiocy
- Give a man a fish and you feed him for a day; teach a man to fish and you feed him for a lifetime

${slide:title=Reflexion on learning}$

+>file://figures/Intro-Swimmers.jpg|width=83+

${slide:title=Diving}$

- You can go inside Pharo
- You can break Pharo
- You can read all the code: it is written with a syntax in one postcard


${slide:title=How to interact with people (on discord)}$

- Do not get stuck
- Be nice
- Be polite
- Be precise
- Do your homework
- Help each others


${slide:title=Core Objectives}$
- Objects / Classes
- Messages / Methods
- self/this and its semantics
- Inheritance
- super and its semantics
- Tests are your life ensurance

${slide:title=Objectives}$
- Class responsibility collaboration
- Delegation
- Message sends are choice (what would be the equivalent to not)
- Message sends are plans for reuse
- Polymorphism
- A Testing Framework
- Blocks and Iterators
- The "Don't ask, tell" Principle
- Some design patterns

${slide:title=Objectives}$
- Understanding OOP as a Design methodologies
- Understand key and essential concepts
- Being able to develop non trivial examples

${slide:title=Why Pharo?}$

- Smalltalk inspired
- Pure, minimal syntax (yes one postcard still you need to think)
- Fully interactive
- Full Mooc available
- Excellent to get immersed in ObjectLand

${slide:title=Side Effect}$

You will also learn
- Understand some requirements, design and implement object-oriented solutions
- Understand and create some basic UML Diagrams
- Use test-driven developments
- See some coding idioms and Design Patterns

${slide:title=Schedule}$

- Week 1 Welcome and Introduction to Syntax
- Week 2 Syntax and Basic Libraries
- Week 3 Object Essential Concepts: Objects/Classes
- Week 4 Essence of OOP
- Week 5 Inheritance
- Week 6 Reuse 

${slide:title=Structure}$

Always several levels/parts:
- Conceptual: Objects, classes....
- Pharo's application of the concepts: Syntax and libraries
- Design heuristics
- Pharo's illustration of the design heuristics

${slide:title=Books}$
- Learning OO Programming and Design with TDD in Pharo
- Pharo by example (http://books.pharo.org)
- Smalltalk by Example (http://stephane.ducasse.free.fr)
- Smalltalk with Style (http://stephane.ducasse.free.fr)
- Best Smalltalk Practices Kent Beck
-  An Introduction to Object-Oriented Programming, Timothy Budd, Addison-Wesley, 2004.

${slide:title=First Exercise!}$




${columns}$

${column:width=50}$

- Watch the ""original"" Karate Kid first movie
- Think about it...

${column:width=50}$

+>file://figures/KarateKid.png|width=83+

${endColumns}$

