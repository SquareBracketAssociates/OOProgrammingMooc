{
	"title":"First look at Objects, Classes, Methods and  Messages",
	"slidesid":"W1S03 - Concepts"
}

${slide:title=An object}$

A little entity with: 
- state
- behavior 
- identity

${slide:title=A turtle object}$

A little entity with: 
- state: tilt, pen up or down
- behavior: draw on screen
- identity: one is different to the other

+>file://figures/Bots-TwoDiffTurles.png|width=60+

${slide:title=A file object}$

A little entity with: 
- state: a path, a contents
- behavior: show contents, change contents, can be renamed
- identity: one is different to the other

${slide:title=About identity and equality}$

Enter a pizzeria... order a pizza

- identity: you eat the pizza of a client
- equality: you order the same pizza than a client


${slide:title=An object reacts to messages}$

[[[
  aTurtle jumpTo: aLocation
]]]

+>file://figures/BotsMessages.png|width=60+

${slide:title=Different objects can understand the same messages}$

Each object may perform a different reaction
[[[
 aWindow open 
]]]

[[[
 aFile open 
]]]

[[[
 aZip open
]]]


${slide:title=Message Receiver}$

i.e., the object that receives the message
[[[
aTurtle jumpTo: aLocation
]]]
==aTurtle==

[[[
aWindow open
]]]
==aWindow==

[[[
aFile open 
]]]
==aFile==

[[[
aZip open
]]]
==aZip==

${slide:title=A method }$

Named sequence of instructions that will be executed on the message receiver

[[[
FrenchPerson >> makeCrepes
]]]
+>file://figures/makeCrepes.png|width=60+


${slide:title=Messages vs. Methods}$

Message: What to do?
[[[
stef makeCrepes.
robert makeCrepes.
peter putJamOnCrepes.
]]]

Methods: How to do it?
+>file://figures/makeCrepes.png|width=30+


${slide:title=One message and multiple methods}$

One message ==open==

Several methods named ==open==
[[[
Window >> open 
     ...
]]]

[[[
File >> open 
    ...
]]]

[[[
Zip >>open
   ...
]]]






${slide:title=A class is factory of objects}$

${columns}$

${column:width=50}$

A class
- Defines all the variables of all its instances
- Defines all the behavior
-- no repetition in all the instances
- Is an object mould

Each instances is still a separate entity
- You can create mutiple baths and break one. 

${column:width=50}$

+>file://figures/bathMaker.png|width=100+

${endColumns}$


${slide:title=Message new creates objects}$

[[[
Turtle new
>>> aTurtle
]]]

+>file://figures/BotsClassCreatingObjects.png|width=80+

[[[
File new
>>> aFile
]]]

${slide:title=Methods are looked up dynamically in the class of the receiver}$


+>file://figures/MethodLookedupWithDiffBehavior.pdf|width=100+




${slide:title=Summary}$

- An Object is a unique entity instance of a class.
- A class specifies the shape and behavior of all its instances.
- An object receives messages and execute corresponding methods. 
- A message is: What to do.
- A method is: How to do it.
- Different objects can understand the same message and execute different methods. 

But we will see that again in the future lectures!