{
	"title":"What is an Object?",
	"subtitle":"entity with state and reacting to messages",
	"slidesid" : "W3S01"
}

${slide:title=An object}$

A little computer entity with
- a specific state
- a behavior 
- an identity

An entity collaborating with other entities

${slide:title=Object Example: a Die}$

aDie(6) 
- aDie(6) has a state: 6 faces
- aDie(6) knows how to roll
- aDie(6) is part of aDieHandle (2D6 + 2D20)

${slide:title=Object Example: a Rectangle}$
[[[
(Rectangle width: 10 height: 20)
]]]
- has a state: an height and a width
- knows how to compute its area, edge closest to a point, overlap with other rectangles
- UI uses rectangles to redisplay

${slide:title=Object Example: a Contact}$

aContact 
- aContact has a state: name, firstname, telephone, address
- aContact knows how to display itself
- aContact is in relation with a contact book

${slide:title=Object Example: an Item Collector}$

- aCollector has a state: lists of items 
- aCollector knows how to save itself, search its items, modify its items
- aContact is relation with an object loader/saver, UI, list of items

${slide:title=State \+ Behavior \+ Identity}$

+>file://figures/StateBehaviorIdentity.jpg|width=80+


${slide:title=State \+ Behavior \+ Identity}$

- ""State"":
-- Objects it contains or refers to (ex: point location)
- ""Behavior"":
-- On object understands a given set of messages
- ""Identity"":
-- On object can be the same (of the same class) than another one but it has still a different identity (location in memory)

${slide:title=About Equality and Identity}$

You enter a pizzeria and order a pizza

-""Equality"" I want to eat the ""same"" kind of pizza
- ""Identity""  eat your pizza



${slide:title=Object Responsibilities}$

- An object has a set of responsibilities that he offers and maintains

- The responsibilities are realized by the execution of behavior 

- Example
-- a turtle draws line, jumps, changes directions

${slide:title=An Object}$

- Encapsulates data
- Reacts to messages by executing methods
+>file://figures/anObject.png|width=80+

${slide:title=An Object Reacts to Messages}$

[[[
  aTurtle jumpTo: aLocation
]]]

+>file://figures/BotsMessages.png|width=60+

${slide:title=Different Objects can Understand the Same Messages}$

Each object may perform a different reaction
[[[
 aWindow open 
]]]

[[[
 aFile open 
]]]

[[[
 aZip open
]]]


${slide:title=A Method Specifies a Behavior}$

[[[
Rectangle >> height
	"Answer the height of the receiver."
	^corner y - origin y
]]]

[[[
Rectangle >> area 
	^ self width * self height
]]]

[[[
(Rectangle origin: 10@10 corner: 50@110) area
>>> 4000
(Rectangle origin: 10@10 corner: 50@60) area
>>> 2000
]]]

${slide:title=A Method Can Send  Other Messages}$

[[[
Rectangle >> topCenter
	"Answer the point at the center of the receiver's top horizontal line."
	^ self center x @ self top
]]]

[[[
Rectangle >> center
	"Answer the point at the center of the receiver."
	^ self topLeft + self bottomRight // 2
]]]

[[[
Rectangle >> top
	"Answer the position of the receiver's top horizontal line."
	^ origin y
]]]

[[[
(Rectangle origin: 10@10 corner: 50@110) topCenter
>>> 30@10
(Rectangle origin: 10@10 corner: 50@60) topCenter
>>> 2000
]]]







${slide:title=Delegating to Other Objects}$

An object may delegate to other objects

- An object can request another object to perform some tasks for him. 
- The sender does not have to know how the delegatee is actually implementing the reaction to his message.


${slide:title=Delegation Example}$

- An item collector asks each of its items to save themselves.
- An item collector asks an object serialisation system to save itself.

${slide:title=What you should know}$
- An object is characterize by a state, a behavior and an identity
- Objects answer to messages by executing methods
- An object may delegate to other objects its tasks
