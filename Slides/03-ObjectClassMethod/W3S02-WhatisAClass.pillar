{
	"title":"What is a class?",
	"subtitle":"a factory of objects",
	"slidesid" : "W3S02"
}



${slide:title=A Class Factorises Object Properties}$

- ""State"": All rectangles have an origin and an extent (containing different values) 
- ""Behavior"": Computing the top of a rectangle can be
-- defined once in the class
-- applied to all rectangles

[[[
Rectangle >> top
	"Answer the position of the receiver's top horizontal line."
	^ origin y
]]]


${slide:title=A Class is a Factory of Objects}$

A class describes the structure and the behavior of its instances
- Each instances has its own value
- All instances of class share the same behavior

+>file://Slides/figures/RectangleAndInstances.pdf|width=40+


${slide:title=A Class is Factory of Objects}$

${columns}$

${column:width=50}$

A class
- Defines all the variables of all its instances
- Defines all the behavior
-- no repetition in all the instances
- Is an object mould

Each instance is still a separate entity
- You can create mutiple baths and break one. 

${column:width=50}$

+>file://figures/bathMaker.png|width=100+

${endColumns}$


${slide:title=An Instance has Specific Properties}$

- A class defines the structure of all its objects
- Instances of a class have ""specific"" for the properties (state) defined by the class

[[[
(Rectangle origin: 10@10 corner: 50@110) extent
>>> 40@100
(Rectangle origin: 10@10 corner: 50@60) extent
>>> 40@50
]]]


${slide:title=Class vs. Instances}$

- An object is instance of a class
- An object has been created by a class
- All instances of a class react similarly to a message
- All instances execute the same method in response to a message

${slide:title=Instances Share the Same Behavior}$

- All the instances of a class share the same behavior
- A class defines the methods that are executed when an instance receives a message

+>file://Slides/figures/RectangleAndInstancesMessages.pdf|width=70+


${slide:title=Methods are Looked up in the Class of the Receiver}$

+>file://Slides/figures/RectangleAndInstancesMessages.pdf|width=70+

${slide:title=Methods are looked up dynamically in the class of the receiver}$


+>file://figures/MethodLookedupWithDiffBehavior.pdf|width=100+




${slide:title=What you should know}$

- Any object is instance of a class.
- A class is a factory: it creates instances.
- All the instances of class execute the same methods in response to the same message.
- A class creates Instances that share their behavior. 
- A class defines methods that are executed on its instances.

