{
	"title":"About Interfaces",
	"slidesid":"",
	"author":"S. Ducasse"
}


${slide:title=Objectives}$

- Looking at interfaces 


${slide:title=Interfaces}$

- Conceptually group of method signatures 
- Used by the typechecker to verify that the program could run
[[[
interface IHand {
    int play (IHand h);
    int playAgainstStone (Stone s);
    int playAgainstScissor (Scissor s);
    int playAgainstPaper (Paper p);
 }
]]]



${slide:title=Interfaces}$
- Interfaces are a good concepts in a statically typed languages
- Decouple a specification from an implementation
- Represent a contract


They support the possibility to work with instances of classes that are not related by subtyping.


${slide:title=Example}$



${slide:title=Points}$

- All members are public
- So the methods you implement should be public

${slide:title=Interface user}$

[[[
class Stone implements IHand {
    public int play (IHand h){
        return h.playAgainstStone(this);
    }
    public int playAgainstStone(Stone s){ return 0;}
    public int playAgainstScissor(Scissor s){ return 1;}
    public int playAgainstPaper(Paper s){ return -1;}
}
]]]

[[[
class Scissor implements IHand {
    public int play (IHand h){
        return h.playAgainstScissor(this);
    }
    public int playAgainstStone(Stone s){ return -1;}
    public int playAgainstScissor(Scissor s){ return 0;}
    public int playAgainstPaper(Paper s){ return 1;
    }
}
]]]

[[[
class Paper implements IHand {
    public int play (IHand h){
        return h.playAgainstPaper(this);}
    public int playAgainstStone(Stone s){ return 1;}
    public int playAgainstScissor(Scissor s){ return -1;}
    public int playAgainstPaper(Paper s){ return 0;
    }
}
]]]


${slide:title=Important points}$

- ==IHand== and ==IHand2== are not the same
- There are not substituable
- Java nominal typing (based on names!!!) does not look inside
[[[
interface IHand {
    int play (IHand h);
    int playAgainstStone (Stone s);
    int playAgainstScissor (Scissor s);
    int playAgainstPaper (Paper p);
 }
]]]

[[[
interface IHand2 {
    int play (IHand2 h);
    int playAgainstStone (Stone s);
    int playAgainstScissor (Scissor s);
    int playAgainstPaper (Paper p);
 }
]]]



${slide:title=What you should know}$

- Interfaces