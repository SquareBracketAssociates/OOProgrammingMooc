{
	"title":"About this lectures: OOProgramming and OODesign",
	"slidesid":"Core",
	"author":"S. Ducasse and S. Costiou"
}


${slide:title=A word of Presentation}$

*http://stephane.ducasse.free.fr*
- Core developer of Pharo - Head of the consortium
- Language design (traits in PHP, Scala, Perl, Groovy...), maintenance, tests,...
- Expert in OO Design, OO implementation and more
Steven
- 6 years of experience in industry
- Expert in debuggers/OOP/OOD

${slide:title=Objectives}$

- Become comfortable with object-oriented programming: Learn to think with objects
- Learn some Java (but not deeply because this is too complex)
- Tests
- Essence of OOP: 
-- what really means to send a message
-- what is this/super
-- some limited design patterns

${slide:title=About this lectures}$

- Not a lecture on how to program 
- A lecture on how to DESIGN programs
- It is not enough just to write code that works
- ''Design starts when the program compiles''

${slide:title=Give some solid foundation for ANY OOP language}$

The world is complex, there are many languages
- Give you a key survival guide
- Concepts available in any languages


${slide:title=What is design?}$

- You learned so far how to code: writing functions, algorithms, structure ideas
- Making extensible, maintainable, readbable code
-- Tests
-- Design nice and beautiful objects
-- Some simple design patterns

${slide:title=Our teaching challenges}$

- Some of you already 'know' (got exposed to) Java 
- Some never really programmed in OOP
- Java is complex and ugly (it polluted the essence of objects)

${slide:title=Solution: Exposing yourself to beauty}$

We do not grow 'Chefs' by feeding them with McDonald 

- Showing Java
-- explaining some selected points 
- Comparing with Pharo
- Provide core and more advanced lectures (free access/consumption)

${slide:title=Solution: A la carte}$

- Everybody should know a bit of Java at the end
- A possibility
-- follow the Pharo Mooc: *http://mooc.pharo.org* and do the exercises there
-- You will get \+4 bonus on exam for your investment
- if you want to learn more you can do both :)

${slide:title=Pharo / Mooc}$

- ''I have already learned so much ! I have spent the last 20 years or so in software development and, following this Mooc, I realized I hadnâ€™t really grasped the essence of object oriented design. Anonymous''
- "I just completed the @pharoproject Mooc the best investment I have ever made of my time. MAQBOOL"

-- Watch *http://rmod-pharo-mooc.lille.inria.fr/MOOC/PharoMOOC-Videos/C019SD-Teaser-v4.mp4*
-- Syntax fit on a postcard
-- Fully immersive 
-- Will change totally the way to think about objects
-- learn XtremeTDD

${slide:title=Outline}$

- Tests
- Java in a nutshell
- Rethinking message passing
- Rethinking ==this==/ ==super== / Inheritance 
- Hooks and template
- Sending messages are plans for reuse
- Avoid is null
- Inheritance vs. Composition

${slide:title=At the end of the lecture}$

You should be able to 
- Write tests and understand why but you need to practice
- Write small programs in Java / Pharo
- Understand late binding for real
- Get first level about what good design is about

${slide:title=About laptops...}$

*https://cs.brown.edu/courses/cs019/2018/laptop-policy.html*

