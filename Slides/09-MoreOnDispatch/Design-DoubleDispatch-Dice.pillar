{
    "title" : "Adding a Dice and a DiceHandle: A Case of Double Dispatch",
    "slidesid" : "From The Design Corner",
    "author" : "StÃ©phane Ducasse"
}


${slide:title=What You Will Learn}$

- How conditionals can be turned into extensible design using messages
- Basis for more complex situation such as the Visitor Design Pattern

${slide:title=Remember Dice}$

We create a DieHandle and add some die to it

[[[
|handle|
handle := DieHandle new 
		addDie: (Die withFaces: 6);
		addDie: (Die withFaces: 10);
		yourself.
handle roll
]]]


${slide:title=Remember DiceHandle}$

We add dieHandle together as in role playing games

[[[
DieHandleTest >> testSumming
	| handle |
	handle := 2 D20 + 3 D10.
	self assert: handle diceNumber = 5.
]]]

- We could add dices to a dice handle
- We could add dice handle to another dice handle


${slide:title=New Requirements}$

We want to add two dices together

[[[
(Die withFaces: 6) + (Die withFaces: 6)
]]]

Now  we want to be able to add a dice to an dice handle



[[[
(Die withFaces: 6) + 2 D20
]]]


[[[
2 D20 + (Die withFaces: 6)
]]]


${slide:title=aNewRequirement asTest }$

[[[
DieTest >> testAddTwoDice

	| hd |
	hd := (Die withFaces: 6) + (Die withFaces: 6).
	self assert: hd dice size = 2.
]]]


[[[
DieTest >> testAddingADieAndHandle
	| hd |
	hd := (Die faces: 6)
		+
		(DieHandle new
			addDie: 6;
			yourself).
	self assert: hd dice size equals: 2
]]]


${slide:title=Propose a solution!}$

${slide:title=First adding two dice}$

[[[	
Die >> + aDie
	
	^ DieHandle new 
		addDie: self; 
		addDie: aDie; 
		yourself
]]]


${slide:title=Limits}$

[[[	
Die >> + aDie
	
	^ DieHandle new 
		addDie: self; 
		addDie: aDie; 
		yourself
]]]

aDie can be 
- a dice
- a die handle


${slide:title=A first step}$


[[[
Die >> sumWithDie: aDie

	^ DieHandle new 
		addDie: self; 
		addDie: aDie; yourself
]]]

[[[
Die >> + aDicable	
	^ aDicable sumWithDie: self
]]]


${slide:title=Adding two dice and ready for more}$

+>file://figures/DieDoubleDispatchPartialArgDie.pdf|width=70+

${slide:title=Handling DieHandle as argument}$

+>file://figures/DieDoubleDispatchPartialArgDieHandle.pdf|width=70+

${slide:title=Handling DieHandle as argument}$

+>file://figures/DieDoubleDispatchPartial.pdf|width=70+

${slide:title=Conclusion}$

- Powerful
- Modular
- Just sending an extra message to an argument and using late binding
